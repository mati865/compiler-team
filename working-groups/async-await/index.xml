<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Async Foundations working group on Rust Lang - Compiler Team</title><link>https://rust-lang.github.io/compiler-team/working-groups/async-await/</link><description>Recent content in Async Foundations working group on Rust Lang - Compiler Team</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rust-lang.github.io/compiler-team/working-groups/async-await/index.xml" rel="self" type="application/rss+xml"/><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/async-await/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/async-await/faq/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/async-await/notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/async-await/notes/</guid><description>Async-await Meeting Notes This document contains meeting notes from the async-await working group.
2019-03-12: Triage Meeting Written by: @davidtwco
This week, the members of the async-await working group updated the group on their individual progress on assigned issues from previous meetings. Then, the group triaged all new issues from the week, looking at #59087 and #59001.
In summary, at the end of this meeting, the group is working on:</description></item><item><title>Triage-links</title><link>https://rust-lang.github.io/compiler-team/working-groups/async-await/triage-links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/async-await/triage-links/</guid><description>Async-await meetings are labeled according to the following scheme:
T-compiler, A-async-await &amp;ndash; on every issue AsyncAwait-Blocking: this blocks our MVP stabilization minor diagnostic issues do not quality, but we are presently aiming for &amp;ldquo;simple code should work as expected&amp;rdquo; naturally anything where it would be backwards incompat to fix is a blocker (i.e., if lang semantics are affected) AsyncAwait-Deferred: this does not block our MVP stabilization AsyncAwait-Unclear: we should discuss (can be applied together with the other two to consider a change in status) In our weekly meeting, a key part is triage.</description></item></channel></rss>